{
    "project": {},
    "files": {
        "src\\js\\effects\\jquery.juiTickingText.js": {
            "name": "src\\js\\effects\\jquery.juiTickingText.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiAbstractPaginator.js": {
            "name": "src\\js\\ui\\jquery.juiAbstractPaginator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiAffix.js": {
            "name": "src\\js\\ui\\jquery.juiAffix.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiBasicPaginator.js": {
            "name": "src\\js\\ui\\jquery.juiBasicPaginator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiDialog.js": {
            "name": "src\\js\\ui\\jquery.juiDialog.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiFloatingScrollIndicators.js": {
            "name": "src\\js\\ui\\jquery.juiFloatingScrollIndicators.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiMouse.js": {
            "name": "src\\js\\ui\\jquery.juiMouse.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiPaginatorWithTextField.js": {
            "name": "src\\js\\ui\\jquery.juiPaginatorWithTextField.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiScalableBtn.js": {
            "name": "src\\js\\ui\\jquery.juiScalableBtn.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiScrollPane.js": {
            "name": "src\\js\\ui\\jquery.juiScrollPane.js",
            "modules": {},
            "classes": {
                "$.jui.juiScrollPane": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiScrollableDropdown.js": {
            "name": "src\\js\\ui\\jquery.juiScrollableDropdown.js",
            "modules": {},
            "classes": {
                "$.jui.juiScrollableDropdown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\ui\\jquery.juiSelectPicker.js": {
            "name": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "modules": {},
            "classes": {
                "jquery.juiSelectPicker": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\utils\\jquery.splitText.js": {
            "name": "src\\js\\utils\\jquery.splitText.js",
            "modules": {},
            "classes": {
                "$.jui.juiSplitText": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\js\\jquery.juiBase.js": {
            "name": "src\\js\\jquery.juiBase.js",
            "modules": {},
            "classes": {
                "$.jui.juiBase": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "$.jui.juiScrollPane": {
            "name": "$.jui.juiScrollPane",
            "shortname": "$.jui.juiScrollPane",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\js\\ui\\jquery.juiScrollPane.js",
            "line": 1,
            "description": "Makes a content area scrollable with custom\nscrollbars whose elements are fetched or created depending on the\nflags passed in/or-not-passed in by the user.",
            "requires": [
                "jquery.mousewheel (for crossbrowser mousewheel functionality)",
                "jquery",
                "jquery.ui (jquery ui core)",
                "jquery.ui.widget",
                "jquery.juiBase",
                "TweenMax"
            ],
            "return": {
                "description": "jquery selection"
            },
            "author": "ElyDeLaCruz",
            "created": "09/28/2013",
            "todo": [
                "move event listeners out of the create function (for consistency)",
                "use the listeners added to window and contentHolder in the unbind function (to ensure we don't remove anyone elses listeners)",
                "solve browser scrollbar mimicking"
            ]
        },
        "$.jui.juiScrollableDropdown": {
            "name": "$.jui.juiScrollableDropdown",
            "shortname": "$.jui.juiScrollableDropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\js\\ui\\jquery.juiScrollableDropdown.js",
            "line": 1,
            "description": "Created by ElyDeLaCruz on 10/1/13.\nA scrollable drop down.",
            "requires": [
                "jquery",
                "jquery.ui.core",
                "jquery.ui.widget",
                "jquery.ui.mouse",
                "jquery.ui.draggable",
                "TweenMax",
                "jquery.juiBase",
                "jquery.juiScrollPane"
            ],
            "triggers": "collapse"
        },
        "jquery.juiSelectPicker": {
            "name": "jquery.juiSelectPicker",
            "shortname": "jquery.juiSelectPicker",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 1,
            "description": "Created by ElyDeLaCruz on 10/1/13.\n\nHides a Select Element and Replaces it with a scrollable Select Picker element\nwhich is fully stylable.",
            "requires": [
                "jquery",
                "jquery.ui (core)",
                "jquery.ui.widget",
                "jquery.juiScrollableDropdown"
            ],
            "todo": [
                "convert all inline option docs to options doclet using the @ property tag"
            ]
        },
        "$.jui.juiSplitText": {
            "name": "$.jui.juiSplitText",
            "shortname": "$.jui.juiSplitText",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 1,
            "requires": [
                "jquery",
                "jquery.ui (jquery ui core)",
                "jquery.widget",
                "jquery.jui.juiBase"
            ],
            "description": "Jquery Plugin for toggling text between split text to spans -to- original text/html.",
            "triggers": "split-text:complete",
            "author": "ElyDeLaCruz",
            "created": "2013/12"
        },
        "$.jui.juiBase": {
            "name": "$.jui.juiBase",
            "shortname": "$.jui.juiBase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\js\\jquery.juiBase.js",
            "line": 1,
            "description": "JUI Plugins Base.",
            "extends": "jQuery.Widget",
            "requires": [
                "jQuery",
                "jQuery.ui",
                "jquery.widget"
            ],
            "created": "with JetBrains WebStorm.",
            "user": ": ElyDeLaCruz",
            "date": ": 9/1/13",
            "time": ": 4:27 AM",
            "todo": [
                "-- issue solved -- make sure all classes that need a timeline object\nimplement their own `getTimeline` method.\n~~~deprecated~~~\nResolve issue with non-unique timeline object -\nTimeline object seems to be only one instance not new instances on\nnew calls of the extending plugins.",
                "start using $.each instead of Object.keys (gets rid of one more dependancy)"
            ]
        }
    },
    "classitems": [
        {
            "file": "src\\js\\effects\\jquery.juiTickingText.js",
            "line": 1,
            "description": "Ticking Text Jquery Plugin.",
            "author": "elydelacruz",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\effects\\jquery.juiTickingText.js",
            "line": 11,
            "description": "Generates a random Char Code",
            "params": [
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\effects\\jquery.juiTickingText.js",
            "line": 23,
            "description": "Jquery Plugin for making Ticking Text",
            "triggers": "tickint-text:complete",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiAbstractPaginator.js",
            "line": 1,
            "description": "Base paginator class for pagination classes.  This plugin is meant to be extended not\nused on it's own!",
            "triggers": "widgetName + ':gotoPageNum'",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiAffix.js",
            "line": 1,
            "description": "Created by edelacruz on 11/19/13.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiBasicPaginator.js",
            "line": 1,
            "description": "Base paginator class for pagination classes.  This plugin is meant to be extended not\nused on it's own!",
            "triggers": "'paginator:gotoPageNum', {pointer: Number}",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 1,
            "description": "Created by ElyDeLaCruz on 1/21/14.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 14,
            "description": "Options hash.",
            "type": "{Object}",
            "itemtype": "property",
            "name": "labelText {String}",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 23,
            "description": "Class name added to wrapper element.",
            "params": [
                {
                    "name": "default:",
                    "description": "'jui-select-picker';",
                    "type": "String"
                }
            ],
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 29,
            "description": "Animation options.",
            "type": "{Object}",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 44,
            "description": "Ui Hash.",
            "type": "{Object}",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 119,
            "description": "Sets flag if touch device (used for disable plugin if options.disableOnTouchDevice\nis true).",
            "access": "private",
            "tagname": "",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 197,
            "description": "Adds event listeners for:\n- wrapper - mouseup;\n- wrapper - a[data-value] click;\n- select element - change;",
            "access": "private",
            "tagname": "",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 274,
            "description": "Destroys `this` instance.\n- and calls _super's destroy method (to finish up the cleaning process);",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 284,
            "description": "Plays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiDialog.js",
            "line": 294,
            "description": "Reverses the animation timeline if not touch device.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiFloatingScrollIndicators.js",
            "line": 1,
            "description": "Created by edelacruz on 11/15/13.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiMouse.js",
            "line": 1,
            "description": "Created by edelacruz on 2/3/14.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiMouse.js",
            "line": 4,
            "description": "Created with JetBrains WebStorm.\nUser: ElyDeLaCruz\nDate: 9/1/13\nTime: 1:15 AM\nTo change this template use File | Settings | File Templates.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiPaginatorWithTextField.js",
            "line": 1,
            "description": "Created with JetBrains WebStorm.\nUser: ElyDeLaCruz\nDate: 9/1/13\nTime: 1:15 AM\nTo change this template use File | Settings | File Templates.",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiScalableBtn.js",
            "line": 1,
            "description": "Created by edelacruz on 2/3/14.",
            "todo": [
                "add destory and remove event listeners  methods/functions."
            ],
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiScrollPane.js",
            "line": 23,
            "description": "Options Hash.",
            "type": "{Object}",
            "class": "$.jui.juiScrollPane"
        },
        {
            "file": "src\\js\\ui\\jquery.juiScrollableDropdown.js",
            "line": 289,
            "description": "Plays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiScrollableDropdown"
        },
        {
            "file": "src\\js\\ui\\jquery.juiScrollableDropdown.js",
            "line": 306,
            "description": "Reverses the animation timeline if not touch device.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiScrollableDropdown"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 19,
            "description": "Options hash.",
            "type": "{Object}",
            "itemtype": "property",
            "name": "labelText {String}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 28,
            "description": "Class name added to wrapper element.",
            "params": [
                {
                    "name": "default:",
                    "description": "'jui-select-picker';",
                    "type": "String"
                }
            ],
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 34,
            "description": "Animation options.",
            "type": "{Object}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 42,
            "description": "Label text.",
            "type": "{String}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 48,
            "description": "Selected Value Label Prefix.",
            "type": "{String}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 54,
            "description": "Selected Value Label Suffix.",
            "type": "{String}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 60,
            "description": "Flag for using selected value label suffix and prefix.",
            "type": "{String}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 66,
            "description": "Skip the first option from the select element in rendering to wrapper.",
            "type": "{Boolean}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 72,
            "description": "Selected Value.",
            "type": "{mixed|null}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 78,
            "description": "The attribute to get the value from on the select element's option element.",
            "type": "{String} - default 'value'",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 84,
            "description": "Where to get the label string for the option from (if 'html', or\n'text uses jquery to pull the 'html'/'text' from the select element's\noption element).",
            "type": "{String} - default 'html'",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 92,
            "description": "Ui Hash.",
            "type": "{Object}",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 177,
            "description": "Sets flag if touch device (used for disable plugin if options.disableOnTouchDevice\nis true).",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 186,
            "description": "Initializes the select picker:\n- Hides select element plugin was called on;\n- Adds css classes for wrapper;\n- Sets initial label text;\n- Draws options within wrapper;\n- Initializes scrollable drop down on wrapper;\n- and Adds event listeners;",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 241,
            "description": "Draws select element's options into wrapper.",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 321,
            "description": "Adds event listeners for:\n- wrapper - mouseup;\n- wrapper - a[data-value] click;",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 353,
            "description": "Removes created options.",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 361,
            "description": "Makes wrapper's content scrollable.\n- Calls jui.scrollableDropDown on wrapper;",
            "access": "private",
            "tagname": "",
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 429,
            "description": "Destroys `this` instance.\n- Shows hidden select element;\n- Removes created options;\n- and calls _super's destroy method (to finish up the cleaning process);",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 442,
            "description": "Refreshes the currently drawn options.\n- Sets selected value;\n- removes options;\n- recreates options;\n- sets label text;",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 460,
            "todo": [
                "remove this function and use external components refresh method instead"
            ],
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 529,
            "description": "Sets the select picker's `selected item label`.",
            "params": [
                {
                    "name": "text",
                    "description": "value to set to label; default ''",
                    "type": "String"
                },
                {
                    "name": "textType",
                    "description": "(html|text) (proxy jquery's text() and/or html() methods to set text).  Default 'text'",
                    "type": "String"
                },
                {
                    "name": "usePrefixAndSuffix",
                    "description": "Whether to use prefix and suffix for label text. Default false",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 568,
            "description": "Sets the select picker's label.",
            "params": [
                {
                    "name": "text",
                    "description": "value to set on label;",
                    "type": "String"
                },
                {
                    "name": "textType",
                    "description": "proxy key for jquery for setting text. Default 'text'",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 583,
            "description": "Sets the selected element in the wrapper's drawn options.\n- Triggers a change event on this.element (select element);",
            "params": [
                {
                    "name": "elm",
                    "description": "The actual element that should be selected.",
                    "type": "Jquery"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 599,
            "description": "Clears the currently selected element.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 610,
            "description": "Plays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 624,
            "description": "Reverses the animation timeline if not touch device.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 638,
            "description": "Gets a drawn option element (from within wrapper) by value.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 647,
            "description": "Gets the selected option's value (from within wrapper).",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 657,
            "description": "Get's an option element's value.",
            "params": [
                {
                    "name": "option",
                    "description": ""
                }
            ],
            "return": {
                "description": "- null or option's value",
                "type": "*"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\ui\\jquery.juiSelectPicker.js",
            "line": 680,
            "description": "Get's an option element's label.",
            "params": [
                {
                    "name": "option",
                    "description": ""
                }
            ],
            "return": {
                "description": "- null or option's label",
                "type": "*"
            },
            "class": "jquery.juiSelectPicker"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 16,
            "description": "Options hash.",
            "type": "{object}",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 22,
            "description": "Used internally as a hash of possible states.",
            "type": "{object}",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 31,
            "description": "Used internally to keep track of text state.",
            "type": "{string}",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 37,
            "description": "The event's prefix name used when triggering event [complete,toggle]",
            "type": "{string}",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 44,
            "description": "Splits a string to a string of span elements.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 63,
            "description": "Creates/Instantiates our plugin.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 86,
            "description": "Toggles the elements split text state (between original text\nand split text to spans text).",
            "params": [
                {
                    "name": "state",
                    "description": "optional default null",
                    "type": "String"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\utils\\jquery.splitText.js",
            "line": 114,
            "description": "Returns the original text of the element.",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "$.jui.juiSplitText"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 24,
            "description": "Options hash.",
            "itemtype": "property",
            "name": "options",
            "type": "{Object}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 30,
            "description": "Flag for disabling plugins on touch devices (and using devices default).",
            "itemtype": "property",
            "name": "disableOnTouchDevice",
            "type": "{Boolean}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 37,
            "description": "Is touch device",
            "itemtype": "property",
            "name": "isTouchDevice",
            "type": "{Boolean}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 44,
            "description": "Less than ie9",
            "itemtype": "property",
            "name": "isLessThanIE9",
            "type": "{Boolean}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 51,
            "description": "Default Timeline Class",
            "itemtype": "property",
            "name": "defaultTimelineClass",
            "type": "{String}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 58,
            "description": "Gsap Timeline object",
            "itemtype": "property",
            "name": "timeline",
            "type": "{Timeline}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 65,
            "description": "Ui hash for ui element",
            "itemtype": "property",
            "name": "ui",
            "type": "{Object}",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 74,
            "description": "Sets flag if touch device (used for disable plugin if options.disableOnTouchDevice\nis true) and also tracks browsers less than ie9.",
            "itemtype": "method",
            "name": "_create",
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 93,
            "description": "Takes a namespace string and fetches that location out from\nan object.  If the namespace doesn't exists it is created then\nreturned.",
            "example": [
                " _namespace('hello.world.how.are.you.doing') // will create/fetch:",
                " {hello: { world: { how: { are: { you: { doing: {} } } } } } }"
            ],
            "itemtype": "method",
            "name": "_namespace",
            "params": [
                {
                    "name": "ns_string",
                    "description": "the namespace you wish to fetch",
                    "type": "String"
                },
                {
                    "name": "extendObj",
                    "description": "optional, default this.options",
                    "type": "Object"
                },
                {
                    "name": "valueToSet",
                    "description": "optional, a value to set on the key (last key if key string (a.b.c.d = value))",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 123,
            "description": "Populates this.ui with element collections from this.options.",
            "itemtype": "method",
            "name": "_populateUiElementsFromOptions",
            "params": [
                {
                    "name": "config",
                    "description": "optional, default this.options",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 164,
            "description": "Fetches an element from the option hash's `ui` namespace.",
            "itemtype": "method",
            "name": "_getElementFromOptions",
            "params": [
                {
                    "name": "optionKey",
                    "description": "",
                    "type": "Object|String"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "null or the jquery element selection",
                "type": "Null|jQuery"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 232,
            "description": "Appends an element from it's hash config object",
            "itemtype": "method",
            "name": "_appendElementFromOptions",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 270,
            "description": "Create and Element from the options.ui hash and appends it to\nit's config.appendTo section alias string.",
            "itemtype": "method",
            "name": "_createElementFromOptions",
            "params": [
                {
                    "name": "config",
                    "description": "the options object from which to create\n and where to populate the created element to.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Null|jQuery"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 303,
            "description": "Remove created elements from the options.ui hash plugin.",
            "itemtype": "method",
            "name": "_removeCreatedElements",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 318,
            "itemtype": "method",
            "name": "_setOption",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "void"
            },
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 329,
            "itemtype": "method",
            "name": "_setOptions",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 346,
            "itemtype": "method",
            "name": "_callSetterForKey",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 364,
            "description": "Adds animations to our animation timeline.",
            "params": [
                {
                    "name": "timeline",
                    "description": "optional",
                    "type": "TimelineLite|TimelineMax"
                },
                {
                    "name": "animations",
                    "description": "optional animations array",
                    "type": "Array"
                },
                {
                    "name": "options",
                    "description": "{object] optional options hash to search on"
                }
            ],
            "return": {
                "description": "default"
            },
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 431,
            "itemtype": "method",
            "name": "_removeDisabledElements",
            "params": [
                {
                    "name": "options",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 460,
            "description": "Pulls a ui element from the options -> ui hash else uses\ngetElementFromOptions to create/fetch it.",
            "itemtype": "method",
            "name": "getUiElement",
            "params": [
                {
                    "name": "alias",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 479,
            "description": "Sets css on element if it exist.",
            "itemtype": "method",
            "name": "setCssOnUiElement",
            "tentative": "",
            "params": [
                {
                    "name": "alias",
                    "description": "Element alias",
                    "type": "String"
                },
                {
                    "name": "cssHash",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 493,
            "description": "Lazy initializes a Timeline Lite or\nTimeline Max animation timeline.",
            "itemtype": "method",
            "name": "getAnimationTimeline",
            "return": {
                "description": "",
                "type": "TimelineMax|TimelineLite"
            },
            "todo": [
                "move this out of here."
            ],
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 510,
            "description": "Gets an option value from the options hash.  This function is a\nproxy for `getValueFromHash` and it just sets the hash to `this.options`.",
            "itemtype": "method",
            "name": "getValueFromOptions",
            "see": [
                "getValueFromHash"
            ],
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 522,
            "description": "Searches hash for key and returns it's value.  If value is a function\ncalls function, with optional `args`, and returns it's return value.\nIf `raw` is true returns the actual function if value is a function.",
            "itemtype": "method",
            "name": "getValueFromHash",
            "params": [
                {
                    "name": "key",
                    "description": "The hash key to search for",
                    "type": "String"
                },
                {
                    "name": "hash",
                    "description": "optional, the hash to search within",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "optional the arrays to pass to value if it is a function",
                    "type": "Array"
                },
                {
                    "name": "raw",
                    "description": "optional whether to return value even if it is a function",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 546,
            "itemtype": "method",
            "name": "setValueOnHash",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                },
                {
                    "name": "hash",
                    "description": ""
                }
            ],
            "class": "$.jui.juiBase"
        },
        {
            "file": "src\\js\\jquery.juiBase.js",
            "line": 556,
            "description": "Returns the timeline classname to use for the instance of the plugin\nextending juibase.",
            "itemtype": "method",
            "name": "getTimelineClassName",
            "return": {
                "description": "default defaultTimelineClassName = 'TimelineLite'",
                "type": "*"
            },
            "class": "$.jui.juiBase"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\effects\\jquery.juiTickingText.js:23"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\ui\\jquery.juiAbstractPaginator.js:1"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\ui\\jquery.juiBasicPaginator.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiDialog.js:274"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiScrollPane.js:1"
        },
        {
            "message": "unknown tag: created",
            "line": " src\\js\\ui\\jquery.juiScrollPane.js:1"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\ui\\jquery.juiScrollableDropdown.js:1"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\ui\\jquery.juiScrollableDropdown.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:429"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:442"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:529"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:599"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:647"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:657"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:680"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\utils\\jquery.splitText.js:1"
        },
        {
            "message": "unknown tag: triggers",
            "line": " src\\js\\utils\\jquery.splitText.js:1"
        },
        {
            "message": "unknown tag: created",
            "line": " src\\js\\utils\\jquery.splitText.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\utils\\jquery.splitText.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\utils\\jquery.splitText.js:114"
        },
        {
            "message": "unknown tag: created",
            "line": " src\\js\\jquery.juiBase.js:1"
        },
        {
            "message": "unknown tag: user",
            "line": " src\\js\\jquery.juiBase.js:1"
        },
        {
            "message": "unknown tag: date",
            "line": " src\\js\\jquery.juiBase.js:1"
        },
        {
            "message": "unknown tag: time",
            "line": " src\\js\\jquery.juiBase.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:164"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:303"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:329"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:364"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:460"
        },
        {
            "message": "unknown tag: tentative",
            "line": " src\\js\\jquery.juiBase.js:479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:493"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:510"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:522"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\js\\jquery.juiBase.js:556"
        },
        {
            "message": "Missing item type\nTicking Text Jquery Plugin.",
            "line": " src\\js\\effects\\jquery.juiTickingText.js:1"
        },
        {
            "message": "Missing item type\nGenerates a random Char Code",
            "line": " src\\js\\effects\\jquery.juiTickingText.js:11"
        },
        {
            "message": "Missing item type\nJquery Plugin for making Ticking Text",
            "line": " src\\js\\effects\\jquery.juiTickingText.js:23"
        },
        {
            "message": "Missing item type\nBase paginator class for pagination classes.  This plugin is meant to be extended not\nused on it's own!",
            "line": " src\\js\\ui\\jquery.juiAbstractPaginator.js:1"
        },
        {
            "message": "Missing item type\nCreated by edelacruz on 11/19/13.",
            "line": " src\\js\\ui\\jquery.juiAffix.js:1"
        },
        {
            "message": "Missing item type\nBase paginator class for pagination classes.  This plugin is meant to be extended not\nused on it's own!",
            "line": " src\\js\\ui\\jquery.juiBasicPaginator.js:1"
        },
        {
            "message": "Missing item type\nCreated by ElyDeLaCruz on 1/21/14.",
            "line": " src\\js\\ui\\jquery.juiDialog.js:1"
        },
        {
            "message": "Missing item type\nClass name added to wrapper element.",
            "line": " src\\js\\ui\\jquery.juiDialog.js:23"
        },
        {
            "message": "Missing item type\nAnimation options.",
            "line": " src\\js\\ui\\jquery.juiDialog.js:29"
        },
        {
            "message": "Missing item type\nUi Hash.",
            "line": " src\\js\\ui\\jquery.juiDialog.js:44"
        },
        {
            "message": "Missing item type\nSets flag if touch device (used for disable plugin if options.disableOnTouchDevice\nis true).",
            "line": " src\\js\\ui\\jquery.juiDialog.js:119"
        },
        {
            "message": "Missing item type\nAdds event listeners for:\n- wrapper - mouseup;\n- wrapper - a[data-value] click;\n- select element - change;",
            "line": " src\\js\\ui\\jquery.juiDialog.js:197"
        },
        {
            "message": "Missing item type\nDestroys `this` instance.\n- and calls _super's destroy method (to finish up the cleaning process);",
            "line": " src\\js\\ui\\jquery.juiDialog.js:274"
        },
        {
            "message": "Missing item type\nPlays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "line": " src\\js\\ui\\jquery.juiDialog.js:284"
        },
        {
            "message": "Missing item type\nReverses the animation timeline if not touch device.",
            "line": " src\\js\\ui\\jquery.juiDialog.js:294"
        },
        {
            "message": "Missing item type\nCreated by edelacruz on 11/15/13.",
            "line": " src\\js\\ui\\jquery.juiFloatingScrollIndicators.js:1"
        },
        {
            "message": "Missing item type\nCreated by edelacruz on 2/3/14.",
            "line": " src\\js\\ui\\jquery.juiMouse.js:1"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: ElyDeLaCruz\nDate: 9/1/13\nTime: 1:15 AM\nTo change this template use File | Settings | File Templates.",
            "line": " src\\js\\ui\\jquery.juiMouse.js:4"
        },
        {
            "message": "Missing item type\nCreated with JetBrains WebStorm.\nUser: ElyDeLaCruz\nDate: 9/1/13\nTime: 1:15 AM\nTo change this template use File | Settings | File Templates.",
            "line": " src\\js\\ui\\jquery.juiPaginatorWithTextField.js:1"
        },
        {
            "message": "Missing item type\nCreated by edelacruz on 2/3/14.",
            "line": " src\\js\\ui\\jquery.juiScalableBtn.js:1"
        },
        {
            "message": "Missing item type\nOptions Hash.",
            "line": " src\\js\\ui\\jquery.juiScrollPane.js:23"
        },
        {
            "message": "Missing item type\nPlays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "line": " src\\js\\ui\\jquery.juiScrollableDropdown.js:289"
        },
        {
            "message": "Missing item type\nReverses the animation timeline if not touch device.",
            "line": " src\\js\\ui\\jquery.juiScrollableDropdown.js:306"
        },
        {
            "message": "Missing item type\nClass name added to wrapper element.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:28"
        },
        {
            "message": "Missing item type\nAnimation options.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:34"
        },
        {
            "message": "Missing item type\nLabel text.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:42"
        },
        {
            "message": "Missing item type\nSelected Value Label Prefix.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:48"
        },
        {
            "message": "Missing item type\nSelected Value Label Suffix.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:54"
        },
        {
            "message": "Missing item type\nFlag for using selected value label suffix and prefix.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:60"
        },
        {
            "message": "Missing item type\nSkip the first option from the select element in rendering to wrapper.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:66"
        },
        {
            "message": "Missing item type\nSelected Value.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:72"
        },
        {
            "message": "Missing item type\nThe attribute to get the value from on the select element's option element.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:78"
        },
        {
            "message": "Missing item type\nWhere to get the label string for the option from (if 'html', or\n'text uses jquery to pull the 'html'/'text' from the select element's\noption element).",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:84"
        },
        {
            "message": "Missing item type\nUi Hash.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:92"
        },
        {
            "message": "Missing item type\nSets flag if touch device (used for disable plugin if options.disableOnTouchDevice\nis true).",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:177"
        },
        {
            "message": "Missing item type\nInitializes the select picker:\n- Hides select element plugin was called on;\n- Adds css classes for wrapper;\n- Sets initial label text;\n- Draws options within wrapper;\n- Initializes scrollable drop down on wrapper;\n- and Adds event listeners;",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:186"
        },
        {
            "message": "Missing item type\nDraws select element's options into wrapper.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:241"
        },
        {
            "message": "Missing item type\nAdds event listeners for:\n- wrapper - mouseup;\n- wrapper - a[data-value] click;",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:321"
        },
        {
            "message": "Missing item type\nRemoves created options.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:353"
        },
        {
            "message": "Missing item type\nMakes wrapper's content scrollable.\n- Calls jui.scrollableDropDown on wrapper;",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:361"
        },
        {
            "message": "Missing item type\nDestroys `this` instance.\n- Shows hidden select element;\n- Removes created options;\n- and calls _super's destroy method (to finish up the cleaning process);",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:429"
        },
        {
            "message": "Missing item type\nRefreshes the currently drawn options.\n- Sets selected value;\n- removes options;\n- recreates options;\n- sets label text;",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:442"
        },
        {
            "message": "Missing item type",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:460"
        },
        {
            "message": "Missing item type\nSets the select picker's `selected item label`.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:529"
        },
        {
            "message": "Missing item type\nSets the select picker's label.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:568"
        },
        {
            "message": "Missing item type\nSets the selected element in the wrapper's drawn options.\n- Triggers a change event on this.element (select element);",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:583"
        },
        {
            "message": "Missing item type\nClears the currently selected element.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:599"
        },
        {
            "message": "Missing item type\nPlays animation timeline (if disableOnTouchDevice is true and isTouchDevice, does nothing).",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:610"
        },
        {
            "message": "Missing item type\nReverses the animation timeline if not touch device.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:624"
        },
        {
            "message": "Missing item type\nGets a drawn option element (from within wrapper) by value.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:638"
        },
        {
            "message": "Missing item type\nGets the selected option's value (from within wrapper).",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:647"
        },
        {
            "message": "Missing item type\nGet's an option element's value.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:657"
        },
        {
            "message": "Missing item type\nGet's an option element's label.",
            "line": " src\\js\\ui\\jquery.juiSelectPicker.js:680"
        },
        {
            "message": "Missing item type\nOptions hash.",
            "line": " src\\js\\utils\\jquery.splitText.js:16"
        },
        {
            "message": "Missing item type\nUsed internally as a hash of possible states.",
            "line": " src\\js\\utils\\jquery.splitText.js:22"
        },
        {
            "message": "Missing item type\nUsed internally to keep track of text state.",
            "line": " src\\js\\utils\\jquery.splitText.js:31"
        },
        {
            "message": "Missing item type\nThe event's prefix name used when triggering event [complete,toggle]",
            "line": " src\\js\\utils\\jquery.splitText.js:37"
        },
        {
            "message": "Missing item type\nSplits a string to a string of span elements.",
            "line": " src\\js\\utils\\jquery.splitText.js:44"
        },
        {
            "message": "Missing item type\nCreates/Instantiates our plugin.",
            "line": " src\\js\\utils\\jquery.splitText.js:63"
        },
        {
            "message": "Missing item type\nToggles the elements split text state (between original text\nand split text to spans text).",
            "line": " src\\js\\utils\\jquery.splitText.js:86"
        },
        {
            "message": "Missing item type\nReturns the original text of the element.",
            "line": " src\\js\\utils\\jquery.splitText.js:114"
        },
        {
            "message": "Missing item type\nAdds animations to our animation timeline.",
            "line": " src\\js\\jquery.juiBase.js:364"
        }
    ]
}